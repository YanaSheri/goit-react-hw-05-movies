{"version":3,"file":"static/js/79.5c29ef93.chunk.js","mappings":"kOAoCA,EAhCiB,WACb,IAAMA,GAAUC,EAAAA,EAAAA,MACVC,GAAWC,EAAAA,EAAAA,MAETC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KAWA,OAJAC,EAAAA,EAAAA,YAAU,WACNL,GAAWM,EAAAA,GAAoBN,GAASO,KAAKH,KAC9C,CAACJ,IAEGG,GACH,iCACI,mBAAQK,KAAK,SAASC,QAVT,WACjBb,EAAQc,KAAKZ,EAASa,MAAMC,OASxB,qBAGA,gBAAKC,IAfE,kCAeYV,EAAMW,YAAaC,IAAI,MAC1C,0BAAKZ,EAAMa,MAAOb,EAAMc,kBACxB,wCAAqC,GAArBd,EAAMe,aAAtB,QACA,sCACA,uBAAIf,EAAMgB,YACV,oCACA,uBAAIhB,EAAMiB,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,KAAO,YAE/C,MCRR,EArBa,WACT,IAAQvB,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOsB,EAAP,KAAgBC,EAAhB,KACAC,QAAQC,IAAI3B,IACZK,EAAAA,EAAAA,YAAU,WACNL,GAAWM,EAAAA,GAAwBN,GAASO,KAAKkB,KAClD,CAACzB,IAEJ,OAAOwB,GACH,+BACI,wBACKA,EAAQI,KAAKP,KAAI,SAAAQ,GAAM,OAAI,2BACxB,gBAAKhB,IALN,kCAKoBgB,EAAOC,aAAcC,MAAM,MAAMhB,IAAI,MACxD,uBAAIc,EAAON,QACX,uCAAgBM,EAAOG,eAHUH,EAAOI,WAOpD,MCIR,EAtBgB,WAAO,IAAD,EACVjC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOgC,EAAP,KAAgBC,EAAhB,KAMA,OAJA9B,EAAAA,EAAAA,YAAU,WACNL,GAAWM,EAAAA,GAAwBN,GAASO,KAAK4B,KAClD,CAACnC,KAGA,gCACKkC,IACG,wBACKA,EAAQE,QAAQf,KAAI,SAAAgB,GAAM,OAAI,2BAC3B,qCAAaA,EAAOC,WACpB,uBAAID,EAAOE,YAFyBF,EAAOJ,SAKzB,KAAtB,OAAPC,QAAO,IAAPA,GAAA,UAAAA,EAASE,eAAT,eAAkBI,UAAiB,yE,SCahD,EA5ByB,WAAO,IAAD,IAC3Bd,QAAQC,IAAI,MACZ,IAAQ3B,GAAYC,EAAAA,EAAAA,MAAZD,QACFF,GAAWC,EAAAA,EAAAA,MACjB,OACI,iCACI,SAAC,EAAD,KACA,mDACA,2BACI,yBACI,SAAC,KAAD,CAAM0C,GAAI,CAAEC,SAAS,WAAD,OAAa1C,EAAb,SAA6BW,MAAO,CAAEC,MAAM,UAAAd,EAASa,aAAT,eAAgBC,OAAQ,MAAxF,qBAIJ,yBAAI,SAAC,KAAD,CAAM6B,GAAI,CAAEC,SAAS,WAAD,OAAY1C,EAAZ,YAA+BW,MAAO,CAAEC,MAAM,UAAAd,EAASa,aAAT,eAAgBC,OAAQ,MAA1F,2BAKR,UAAC,KAAD,YACI,SAAC,KAAD,CAAO+B,KAAK,wBAAwBC,UAAWC,KAC/C,SAAC,KAAD,CAAOF,KAAK,2BAA2BC,UAAWE","sources":["components/OneMovie/OneMovie.jsx","components/Cast/Cast.jsx","components/Reviews/Reviews.jsx","pages/MovieDetailsPage.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useHistory, useLocation, useParams } from \"react-router-dom\";\nimport * as fetches from '../../services/fetches';\n\nconst OneMovie = () => {\n    const history = useHistory();\n    const location = useLocation();\n\n    const { movieId } = useParams();\n    const [movie, setMovie] = useState(null);\n    const imgUrl = 'https://image.tmdb.org/t/p/w400';\n\n    const handleGoBack = () => {\n        history.push(location.state.from);\n    };\n\n    useEffect(() => {\n        movieId && fetches.getOneMovie(movieId).then(setMovie)\n    }, [movieId]);\n   \n    return movie ? (\n        <>\n            <button type=\"button\" onClick={handleGoBack}>\n                GoBack\n            </button>\n            <img src={imgUrl + movie.poster_path} alt=\"\" />\n            <h2>{movie.title}{movie.original_name}</h2>\n            <p>User score: {movie.vote_average * 10}%</p>\n            <h3>Overview</h3>\n            <p>{movie.overview}</p>\n            <h4>Genres</h4>\n            <p>{movie.genres.map(genre => genre.name + \" \")}</p>\n        </>\n    ) : null;\n}\n \nexport default OneMovie;","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport * as fetches from '../../services/fetches';\n\nconst Cast = () => {\n    const { movieId } = useParams();\n    const [credits, setCredits] = useState(null);\n    console.log(movieId);\n    useEffect(() => {\n        movieId && fetches.getMovieCredits(movieId).then(setCredits)\n    }, [movieId]);\n    const imgUrl = 'https://image.tmdb.org/t/p/w400';\n    return credits ? (\n        <>\n            <ul>\n                {credits.cast.map(credit => <li key={credit.id}>\n                    <img src={imgUrl + credit.profile_path} width=\"200\" alt=\"\" />\n                    <p>{credit.name}</p>\n                    <p>Character: { credit.character }</p>\n                </li>)}\n            </ul>\n        </>\n    ) : null;\n}\n \nexport default Cast;","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport * as fetches from '../../services/fetches';\n\nconst Reviews = () => {\n    const { movieId } = useParams();\n    const [reviews, setReviews] = useState(null);\n\n    useEffect(() => {\n        movieId && fetches.getMovieReviews(movieId).then(setReviews)\n    }, [movieId]);\n        \n    return (\n        <>\n            {reviews && (\n                <ul>\n                    {reviews.results.map(review => <li key={review.id}>\n                        <h4>Author: {review.author}</h4>\n                        <p>{review.content}</p>\n                    </li>)}\n                </ul>)}\n            {reviews?.results?.length === 0 && (<p>We don't have any reviews for this movie.</p>)}\n        </>\n    ) \n}\n \nexport default Reviews;","import OneMovie from \"components/OneMovie/OneMovie\";\nimport { Route } from \"react-router\";\nimport Cast from '../components/Cast/Cast';\nimport Reviews from '../components/Reviews/Reviews';\nimport { Link, useParams, Switch, useLocation } from \"react-router-dom\";\n\nconst MovieDetailsPage = () => {\n    console.log(\"Ok\");\n    const { movieId } = useParams();\n    const location = useLocation();\n    return (\n        <>\n            <OneMovie />\n            <p>Additional information</p>\n            <ul>\n                <li>\n                    <Link to={{ pathname: `/movies/${movieId}/cast`, state: { from: location.state?.from || '/' } }}>\n                        Cast\n                    </Link>\n                </li>\n                <li><Link to={{ pathname:`/movies/${movieId}/reviews`, state: { from: location.state?.from || '/' } }}>\n                        Reviews\n                    </Link>\n                </li>\n            </ul>\n            <Switch>\n                <Route path=\"/movies/:movieId/cast\" component={Cast} />\n                <Route path=\"/movies/:movieId/reviews\" component={Reviews} />\n            </Switch>\n            \n        </>\n    );\n}\n \nexport default MovieDetailsPage;"],"names":["history","useHistory","location","useLocation","movieId","useParams","useState","movie","setMovie","useEffect","fetches","then","type","onClick","push","state","from","src","poster_path","alt","title","original_name","vote_average","overview","genres","map","genre","name","credits","setCredits","console","log","cast","credit","profile_path","width","character","id","reviews","setReviews","results","review","author","content","length","to","pathname","path","component","Cast","Reviews"],"sourceRoot":""}